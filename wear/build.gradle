/*
 * Copyright 2016 Sascha Peilicke
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id("com.android.application")
    id("kotlin-android")
    id("kotlin-android-extensions")
}

repositories {
    google()
    jcenter()
}

def properties = new Properties()
if (file("$rootDir/local.properties").exists()) {
    properties.load(file("$rootDir/local.properties").newDataInputStream())
}
if (file("$rootDir/config/play-store-signing.properties").exists()) {
    print "Using keystore credentials from config/play-store-signing.properties\n"
    properties.load(file("$rootDir/config/play-store-signing.properties").newDataInputStream())
}

android {
    compileSdkVersion(29)

    defaultConfig {
        applicationId = "saschpe.poker"
        minSdkVersion(24) // Standalone Wear 2.0 app
        targetSdkVersion(29)
        versionCode = 241010305
        versionName = "1.3.5"
        archivesBaseName = "${applicationId}-${versionName}"
    }

    signingConfigs {
        register("default") {
            keyAlias = properties.getProperty("signing.key.alias", signingConfigs.debug.keyAlias)
            keyPassword = properties.getProperty("signing.key.password", signingConfigs.debug.keyPassword)
            storeFile = file(properties.getProperty("signing.store.file", signingConfigs.debug.storeFile.path))
            storePassword = properties.getProperty("signing.store.password", signingConfigs.debug.storePassword)
        }
    }

    buildTypes {
        named("debug") {
            applicationIdSuffix = ".debug"
        }
        named("release") {
            minifyEnabled = true
            proguardFiles(
                    getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
            )
            signingConfig = signingConfigs.getByName("default")
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions.jvmTarget = "1.8"
}

dependencies {
    compileOnly("com.google.android.wearable:wearable:2.4.0")

    implementation(project(":common"))
    implementation('androidx.appcompat:appcompat:1.0.2')
    implementation("androidx.cardview:cardview:1.0.0")
    implementation("androidx.legacy:legacy-support-v4:1.0.0")
    implementation("androidx.percentlayout:percentlayout:1.0.0")
    implementation("androidx.recyclerview:recyclerview:1.0.0")
    implementation("androidx.wear:wear:1.0.0")
    implementation("com.google.android.gms:play-services-wearable:16.0.1")
    implementation("com.google.android.support:wearable:2.4.0")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.61")
    implementation("saschpe.android:utils:2.0.0")
    implementation("saschpe.android:versioninfo:2.1.2")
}
